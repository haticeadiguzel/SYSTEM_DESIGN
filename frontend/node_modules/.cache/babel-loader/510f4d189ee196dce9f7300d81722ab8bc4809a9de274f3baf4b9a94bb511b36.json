{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/GitHub/SYSTEM_DESIGN/src/Pages/ThreadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Terminal } from \"../Components/Terminal/terminal\";\nimport { Form } from \"../Components/Form/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThreadPage = () => {\n  _s();\n  const [thread, setThread] = useState([]);\n  const [addThread, setAddThread] = useState('');\n  const [promptDirectory, setPromptDirectory] = useState('');\n  const fetchData = async (url, successCallback) => {\n    try {\n      const response = await fetch(url);\n      if (response.ok) {\n        const data = await response.json();\n        successCallback(data);\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n    }\n  };\n  const getLatestThreads = () => {\n    fetchData('/thread', data => setThread(data));\n  };\n  const getLatestPromptDirectory = () => {\n    fetchData('/get_os', data => setPromptDirectory(data.prompt_directory));\n  };\n  const handleFormChange = inputValue => {\n    setAddThread(inputValue);\n  };\n  const handleFormSubmit = () => {\n    fetchData('/thread/create', responseData => {\n      setAddThread('');\n      if (addThread !== 'clear') {\n        getLatestThreads();\n      } else {\n        setThread([]);\n      }\n      getLatestPromptDirectory();\n    });\n  };\n  useEffect(() => {\n    getLatestThreads();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      userInput: addThread,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n      listOfThreads: thread\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(ThreadPage, \"IDmfoa/MQrBUyrSOfdkl4dk1SuI=\");\n_c = ThreadPage;\nvar _c;\n$RefreshReg$(_c, \"ThreadPage\");","map":{"version":3,"names":["React","useState","useEffect","Terminal","Form","jsxDEV","_jsxDEV","ThreadPage","_s","thread","setThread","addThread","setAddThread","promptDirectory","setPromptDirectory","fetchData","url","successCallback","response","fetch","ok","data","json","error","console","getLatestThreads","getLatestPromptDirectory","prompt_directory","handleFormChange","inputValue","handleFormSubmit","responseData","children","userInput","onFormChange","onFormSubmit","fileName","_jsxFileName","lineNumber","columnNumber","listOfThreads","_c","$RefreshReg$"],"sources":["/home/hatice/Documents/GitHub/SYSTEM_DESIGN/src/Pages/ThreadPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Terminal } from \"../Components/Terminal/terminal\";\nimport { Form } from \"../Components/Form/form\";\n\nexport const ThreadPage = () => {\n    const [thread, setThread] = useState([]);\n    const [addThread, setAddThread] = useState('');\n    const [promptDirectory, setPromptDirectory] = useState('');\n\n    const fetchData = async (url, successCallback) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                const data = await response.json();\n                successCallback(data);\n            }\n        } catch (error) {\n            console.error('Fetch error:', error);\n        }\n    };\n\n    const getLatestThreads = () => {\n        fetchData('/thread', data => setThread(data));\n    };\n\n    const getLatestPromptDirectory = () => {\n        fetchData('/get_os', data => setPromptDirectory(data.prompt_directory));\n    };\n\n    const handleFormChange = (inputValue) => {\n        setAddThread(inputValue);\n    };\n\n    const handleFormSubmit = () => {\n        fetchData('/thread/create', responseData => {\n            setAddThread('');\n            if (addThread !== 'clear') {\n                getLatestThreads();\n            } else {\n                setThread([]);\n            }\n            getLatestPromptDirectory();\n        });\n    };\n\n    useEffect(() => {\n        getLatestThreads();\n    }, []);\n\n    return (\n        <div>\n            <Form userInput={addThread} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit} />\n            <Terminal listOfThreads={thread} />\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iCAAiC;AAC1D,SAASC,IAAI,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMc,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,eAAe,KAAK;IAC9C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MAEjC,IAAIE,QAAQ,CAACE,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCL,eAAe,CAACI,IAAI,CAAC;MACzB;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3BV,SAAS,CAAC,SAAS,EAAEM,IAAI,IAAIX,SAAS,CAACW,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,MAAMK,wBAAwB,GAAGA,CAAA,KAAM;IACnCX,SAAS,CAAC,SAAS,EAAEM,IAAI,IAAIP,kBAAkB,CAACO,IAAI,CAACM,gBAAgB,CAAC,CAAC;EAC3E,CAAC;EAED,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACrCjB,YAAY,CAACiB,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3Bf,SAAS,CAAC,gBAAgB,EAAEgB,YAAY,IAAI;MACxCnB,YAAY,CAAC,EAAE,CAAC;MAChB,IAAID,SAAS,KAAK,OAAO,EAAE;QACvBc,gBAAgB,CAAC,CAAC;MACtB,CAAC,MAAM;QACHf,SAAS,CAAC,EAAE,CAAC;MACjB;MACAgB,wBAAwB,CAAC,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZuB,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACInB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA,CAACF,IAAI;MAAC6B,SAAS,EAAEtB,SAAU;MAACuB,YAAY,EAAEN,gBAAiB;MAACO,YAAY,EAAEL;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9FjC,OAAA,CAACH,QAAQ;MAACqC,aAAa,EAAE/B;IAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd,CAAC;AAAC/B,EAAA,CApDWD,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}