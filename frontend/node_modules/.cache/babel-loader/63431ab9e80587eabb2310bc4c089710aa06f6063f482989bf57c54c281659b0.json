{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './terminal.css';\n\n// Terminal bileşeni\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Terminal = ({\n  listOfThreads\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-output\",\n        children: listOfThreads.map(thread => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"prompt \", thread.command]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: thread.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 29\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n// Ana uygulama bileşeni\n_c = Terminal;\nconst App = () => {\n  _s();\n  const [threads, setThreads] = useState([]);\n\n  // Sunucu işlemlerini takip etmek için bir örnek\n  useEffect(() => {\n    // Sunucu işlemini başlat ve sonuçları 'threads' dizisine ekleyin\n    // Örneğin:\n    const executeServerCommand = async command => {\n      try {\n        const output = await someServerCommandFunction(command);\n        setThreads(threads => [...threads, {\n          id: threads.length + 1,\n          command,\n          output\n        }]);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    // Örnek bir sunucu komutunu çağırın\n    executeServerCommand('ls -l');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Terminal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n      listOfThreads: threads\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"sq9hmC9Ec1RKesUYep9W9DPjbrM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Terminal\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Terminal","listOfThreads","children","className","map","thread","command","fileName","_jsxFileName","lineNumber","columnNumber","output","id","_c","App","_s","threads","setThreads","executeServerCommand","someServerCommandFunction","length","error","console","_c2","$RefreshReg$"],"sources":["/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './terminal.css';\n\n// Terminal bileşeni\nconst Terminal = ({ listOfThreads }) => {\n    return (\n        <>\n            <div className='terminal-container'>\n                <div className='terminal-output'>\n                    {listOfThreads.map(thread => (\n                        <ul key={thread.id}>\n                            <li>prompt {thread.command}</li>\n                            <li>{thread.output}</li>\n                        </ul>\n                    ))}\n                </div>\n            </div>\n        </>\n    );\n}\n\n// Ana uygulama bileşeni\nconst App = () => {\n    const [threads, setThreads] = useState([]);\n\n    // Sunucu işlemlerini takip etmek için bir örnek\n    useEffect(() => {\n        // Sunucu işlemini başlat ve sonuçları 'threads' dizisine ekleyin\n        // Örneğin:\n        const executeServerCommand = async (command) => {\n            try {\n                const output = await someServerCommandFunction(command);\n                setThreads(threads => [\n                    ...threads,\n                    { id: threads.length + 1, command, output }\n                ]);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        // Örnek bir sunucu komutunu çağırın\n        executeServerCommand('ls -l');\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <h1>React Terminal</h1>\n            <Terminal listOfThreads={threads} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EACpC,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACIL,OAAA;MAAKM,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eAC/BL,OAAA;QAAKM,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC3BD,aAAa,CAACG,GAAG,CAACC,MAAM,iBACrBR,OAAA;UAAAK,QAAA,gBACIL,OAAA;YAAAK,QAAA,GAAI,SAAO,EAACG,MAAM,CAACC,OAAO;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChCb,OAAA;YAAAK,QAAA,EAAKG,MAAM,CAACM;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFnBL,MAAM,CAACO,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGd,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;;AAED;AAAAG,EAAA,GAjBMb,QAAQ;AAkBd,MAAMc,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMuB,oBAAoB,GAAG,MAAOZ,OAAO,IAAK;MAC5C,IAAI;QACA,MAAMK,MAAM,GAAG,MAAMQ,yBAAyB,CAACb,OAAO,CAAC;QACvDW,UAAU,CAACD,OAAO,IAAI,CAClB,GAAGA,OAAO,EACV;UAAEJ,EAAE,EAAEI,OAAO,CAACI,MAAM,GAAG,CAAC;UAAEd,OAAO;UAAEK;QAAO,CAAC,CAC9C,CAAC;MACN,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;;IAED;IACAH,oBAAoB,CAAC,OAAO,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIrB,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAD,QAAA,gBAChBL,OAAA;MAAAK,QAAA,EAAI;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBb,OAAA,CAACG,QAAQ;MAACC,aAAa,EAAEe;IAAQ;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEd,CAAC;AAAAK,EAAA,CA7BKD,GAAG;AAAAS,GAAA,GAAHT,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}