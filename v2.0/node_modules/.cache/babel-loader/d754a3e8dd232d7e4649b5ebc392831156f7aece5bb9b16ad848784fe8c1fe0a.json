{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './terminal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Terminal = ({\n  listOfThreads\n}) => {\n  _s();\n  const [operatingSystem, setOperatingSystem] = useState('');\n  const [userHatice, setUserHatice] = useState('');\n  const [currentDirectory, setCurrentDirectory] = useState('');\n  useEffect(() => {\n    fetch('/get_os').then(response => response.json()).then(data => {\n      setOperatingSystem(data.operating_system);\n      setUserHatice(data.user_hatice);\n      setCurrentDirectory(data.current_directory);\n      console.log('İşletim Sistemi Bilgisi:', data.operating_system);\n      console.log('Kullanıcı Bilgisi:', data.user_hatice);\n      console.log('Mevcut Dizin:', data.current_directory);\n    }).catch(error => {\n      console.error('Hata:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-output\",\n        children: listOfThreads.map(thread => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [operatingSystem, \" \", thread.command]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: thread.output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, thread.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Terminal, \"euBKq0xZdIm7qEG4JZfqy1KUsZw=\");\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Terminal","listOfThreads","_s","operatingSystem","setOperatingSystem","userHatice","setUserHatice","currentDirectory","setCurrentDirectory","fetch","then","response","json","data","operating_system","user_hatice","current_directory","console","log","catch","error","children","className","map","thread","command","fileName","_jsxFileName","lineNumber","columnNumber","output","id","_c","$RefreshReg$"],"sources":["/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './terminal.css';\n\nexport const Terminal = ({ listOfThreads }) => {\n    const [operatingSystem, setOperatingSystem] = useState('');\n    const [userHatice, setUserHatice] = useState('');\n    const [currentDirectory, setCurrentDirectory] = useState('');\n\n  useEffect(() => {\n    fetch('/get_os')\n      .then(response => response.json())\n      .then(data => {\n        setOperatingSystem(data.operating_system);\n        setUserHatice(data.user_hatice);\n        setCurrentDirectory(data.current_directory);\n        console.log('İşletim Sistemi Bilgisi:', data.operating_system);\n        console.log('Kullanıcı Bilgisi:', data.user_hatice);\n        console.log('Mevcut Dizin:', data.current_directory);\n      })\n      .catch(error => {\n        console.error('Hata:', error);\n      });\n  }, []);\n\n    return (\n        <>\n            <div className='terminal-container'>\n                <div className='terminal-output'>\n                    {listOfThreads.map(thread => {\n                        return (\n                            <ul key={thread.id}>\n                                <li>{operatingSystem} {thread.command}</li>\n                                <li>{thread.output}</li>\n                            </ul>\n                        )\n                    })}\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZT,kBAAkB,CAACS,IAAI,CAACC,gBAAgB,CAAC;MACzCR,aAAa,CAACO,IAAI,CAACE,WAAW,CAAC;MAC/BP,mBAAmB,CAACK,IAAI,CAACG,iBAAiB,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,IAAI,CAACC,gBAAgB,CAAC;MAC9DG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,IAAI,CAACE,WAAW,CAAC;MACnDE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,IAAI,CAACG,iBAAiB,CAAC;IACtD,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACIvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACIxB,OAAA;MAAKyB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eAC/BxB,OAAA;QAAKyB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC3BpB,aAAa,CAACsB,GAAG,CAACC,MAAM,IAAI;UACzB,oBACI3B,OAAA;YAAAwB,QAAA,gBACIxB,OAAA;cAAAwB,QAAA,GAAKlB,eAAe,EAAC,GAAC,EAACqB,MAAM,CAACC,OAAO;YAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3ChC,OAAA;cAAAwB,QAAA,EAAKG,MAAM,CAACM;YAAM;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFnBL,MAAM,CAACO,EAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGd,CAAC;QAEb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAA3B,EAAA,CArCYF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}