{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/GitHub/SYSTEM_DESIGN/src/Pages/ThreadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Terminal } from \"../Components/Terminal/terminal\";\nimport { Form } from \"../Components/Form/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThreadPage = () => {\n  _s();\n  const [thread, setThread] = useState([]);\n  const [addThread, setAddThread] = useState('');\n  // eslint-disable-next-line\n  const [promptDirectory, setPromptDirectory] = useState('');\n  useEffect(() => {\n    fetch('/thread').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setThread(data));\n  }, []);\n  const handleFormChange = inputValue => {\n    setAddThread(inputValue);\n  };\n  const handleFormSubmit = () => {\n    fetch('/thread/create', {\n      method: 'POST',\n      body: JSON.stringify({\n        command: addThread\n      }),\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(responseData => {\n      setAddThread('');\n      if (addThread === 'clear') {\n        setThread([]);\n      } else {\n        getLatestThreads();\n      }\n      getLatestPromptDirectory();\n    });\n  };\n  const fetchData = async (url, successCallback) => {\n    try {\n      const response = await fetch(url);\n      if (response.ok) {\n        const data = await response.json();\n        successCallback(data);\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n    }\n  };\n  const getLatestThreads = () => {\n    fetchData('/thread', data => setThread(data));\n  };\n  const getLatestPromptDirectory = () => {\n    fetchData('/get_os', data => setPromptDirectory(data.prompt_directory));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      userInput: addThread,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n      listOfThreads: thread\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(ThreadPage, \"IDmfoa/MQrBUyrSOfdkl4dk1SuI=\");\n_c = ThreadPage;\nvar _c;\n$RefreshReg$(_c, \"ThreadPage\");","map":{"version":3,"names":["React","useState","useEffect","Terminal","Form","jsxDEV","_jsxDEV","ThreadPage","_s","thread","setThread","addThread","setAddThread","promptDirectory","setPromptDirectory","fetch","then","response","ok","json","data","handleFormChange","inputValue","handleFormSubmit","method","body","JSON","stringify","command","headers","responseData","getLatestThreads","getLatestPromptDirectory","fetchData","url","successCallback","error","console","prompt_directory","children","userInput","onFormChange","onFormSubmit","fileName","_jsxFileName","lineNumber","columnNumber","listOfThreads","_c","$RefreshReg$"],"sources":["/home/hatice/Documents/GitHub/SYSTEM_DESIGN/src/Pages/ThreadPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Terminal } from \"../Components/Terminal/terminal\";\nimport { Form } from \"../Components/Form/form\";\n\nexport const ThreadPage = () => {\n    const [thread, setThread] = useState([]);\n    const [addThread, setAddThread] = useState('');\n    // eslint-disable-next-line\n    const [promptDirectory, setPromptDirectory] = useState('');\n\n    useEffect(() => {\n        fetch('/thread').then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n        }).then(data => setThread(data))\n    }, [])\n\n    const handleFormChange = (inputValue) => {\n        setAddThread(inputValue);\n    }\n\n    const handleFormSubmit = () => {\n        fetch('/thread/create', {\n            method: 'POST',\n            body: JSON.stringify({\n                command: addThread\n            }),\n            headers: {\n                'Content-Type': 'application/json; charset=UTF-8'\n            }\n        }).then(response => response.json())\n            .then(responseData => {\n                setAddThread('')\n                if(addThread === 'clear') {\n                    setThread([])\n                }\n                else {\n                    getLatestThreads()\n                }\n                getLatestPromptDirectory()\n            })\n\n    }\n\n    const fetchData = async (url, successCallback) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                const data = await response.json();\n                successCallback(data);\n            }\n        } catch (error) {\n            console.error('Fetch error:', error);\n        }\n    };\n\n    const getLatestThreads = () => {\n        fetchData('/thread', data => setThread(data));\n    };\n\n    const getLatestPromptDirectory = () => {\n        fetchData('/get_os', data => setPromptDirectory(data.prompt_directory));\n    };\n\n    return (\n        <div>\n            <Form userInput={addThread} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit} />\n            <Terminal listOfThreads={thread} />\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iCAAiC;AAC1D,SAASC,IAAI,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZa,KAAK,CAAC,SAAS,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MAC9B,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC,CAACH,IAAI,CAACI,IAAI,IAAIV,SAAS,CAACU,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACrCV,YAAY,CAACU,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3BR,KAAK,CAAC,gBAAgB,EAAE;MACpBS,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,OAAO,EAAEjB;MACb,CAAC,CAAC;MACFkB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CAACb,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAC/BH,IAAI,CAACc,YAAY,IAAI;MAClBlB,YAAY,CAAC,EAAE,CAAC;MAChB,IAAGD,SAAS,KAAK,OAAO,EAAE;QACtBD,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,MACI;QACDqB,gBAAgB,CAAC,CAAC;MACtB;MACAC,wBAAwB,CAAC,CAAC;IAC9B,CAAC,CAAC;EAEV,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,eAAe,KAAK;IAC9C,IAAI;MACA,MAAMlB,QAAQ,GAAG,MAAMF,KAAK,CAACmB,GAAG,CAAC;MAEjC,IAAIjB,QAAQ,CAACC,EAAE,EAAE;QACb,MAAME,IAAI,GAAG,MAAMH,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCgB,eAAe,CAACf,IAAI,CAAC;MACzB;IACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EAED,MAAML,gBAAgB,GAAGA,CAAA,KAAM;IAC3BE,SAAS,CAAC,SAAS,EAAEb,IAAI,IAAIV,SAAS,CAACU,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,MAAMY,wBAAwB,GAAGA,CAAA,KAAM;IACnCC,SAAS,CAAC,SAAS,EAAEb,IAAI,IAAIN,kBAAkB,CAACM,IAAI,CAACkB,gBAAgB,CAAC,CAAC;EAC3E,CAAC;EAED,oBACIhC,OAAA;IAAAiC,QAAA,gBACIjC,OAAA,CAACF,IAAI;MAACoC,SAAS,EAAE7B,SAAU;MAAC8B,YAAY,EAAEpB,gBAAiB;MAACqB,YAAY,EAAEnB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9FxC,OAAA,CAACH,QAAQ;MAAC4C,aAAa,EAAEtC;IAAO;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd,CAAC;AAACtC,EAAA,CApEWD,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}