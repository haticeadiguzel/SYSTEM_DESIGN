{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/GitHub/SYSTEM_DESIGN/src/Components/Terminal/terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./terminal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Terminal = ({\n  listOfThreads\n}) => {\n  _s();\n  const [promptDirectory, setPromptDirectory] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/get_os\").then(response => response.json()).then(data => {\n      setPromptDirectory(data.prompt_directory);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }, [listOfThreads]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-output\",\n        children: listOfThreads.map(thread => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: promptDirectory ? `${promptDirectory} ${thread.command}` : `>>> ${thread.command}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: thread.output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, thread.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Terminal, \"YhWzFAQgQmOXjQ9E436e7t7fzyQ=\");\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Terminal","listOfThreads","_s","promptDirectory","setPromptDirectory","fetch","then","response","json","data","prompt_directory","catch","error","console","children","className","map","thread","command","fileName","_jsxFileName","lineNumber","columnNumber","output","id","_c","$RefreshReg$"],"sources":["/home/hatice/Documents/GitHub/SYSTEM_DESIGN/src/Components/Terminal/terminal.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./terminal.css\";\n\nexport const Terminal = ({ listOfThreads }) => {\n  const [promptDirectory, setPromptDirectory] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/get_os\")\n      .then((response) => response.json())\n      .then((data) => {\n        setPromptDirectory(data.prompt_directory);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }, [listOfThreads]);\n\n  return (\n    <>\n      <div className=\"terminal-container\">\n        <div className=\"terminal-output\">\n          {listOfThreads.map((thread) => {\n            return (\n              <ul key={thread.id}>\n                <li>\n                  {promptDirectory\n                    ? `${promptDirectory} ${thread.command}`\n                    : `>>> ${thread.command}`}\n                </li>\n                <li>{thread.output}</li>\n              </ul>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,kBAAkB,CAACK,IAAI,CAACC,gBAAgB,CAAC;IAC3C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,aAAa,CAAC,CAAC;EAEnB,oBACEJ,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eACjCjB,OAAA;QAAKkB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC7Bb,aAAa,CAACe,GAAG,CAAEC,MAAM,IAAK;UAC7B,oBACEpB,OAAA;YAAAiB,QAAA,gBACEjB,OAAA;cAAAiB,QAAA,EACGX,eAAe,GACX,GAAEA,eAAgB,IAAGc,MAAM,CAACC,OAAQ,EAAC,GACrC,OAAMD,MAAM,CAACC,OAAQ;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACLzB,OAAA;cAAAiB,QAAA,EAAKG,MAAM,CAACM;YAAM;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GANjBL,MAAM,CAACO,EAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOd,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACpB,EAAA,CAlCWF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}