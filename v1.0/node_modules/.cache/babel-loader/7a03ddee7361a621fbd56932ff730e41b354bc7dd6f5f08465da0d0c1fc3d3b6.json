{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './terminal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Terminal = ({\n  listOfThreads\n}) => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  useEffect(() => {\n    // Fonksiyonu tanımlayın ve ilk seferde çağırın\n    function updatePrompt() {\n      fetch('/get_prompt').then(response => response.json()).then(data => setPrompt(data.prompt)).catch(error => {\n        console.log(error);\n      });\n    }\n\n    // İlk seferde çağır\n    updatePrompt();\n\n    // Dizin değişikliği izlemek için bir event listener ekleyin\n    window.addEventListener('popstate', updatePrompt);\n\n    // useEffect'in temizleme fonksiyonuyla event listener'ı kaldırın\n    return () => {\n      window.removeEventListener('popstate', updatePrompt);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-output\",\n        children: listOfThreads.map(thread => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: `${prompt} ${thread.command}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: thread.output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, thread.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Terminal, \"ycgaeRBSFoQ/5UZxseFwUuHqkQQ=\");\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Terminal","listOfThreads","_s","prompt","setPrompt","updatePrompt","fetch","then","response","json","data","catch","error","console","log","window","addEventListener","removeEventListener","children","className","map","thread","command","fileName","_jsxFileName","lineNumber","columnNumber","output","id","_c","$RefreshReg$"],"sources":["/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './terminal.css';\n\nexport const Terminal = ({ listOfThreads }) => {\n    const [prompt, setPrompt] = useState('');\n\n    useEffect(() => {\n        // Fonksiyonu tanımlayın ve ilk seferde çağırın\n        function updatePrompt() {\n            fetch('/get_prompt')\n                .then(response => response.json())\n                .then(data => setPrompt(data.prompt))\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n\n        // İlk seferde çağır\n        updatePrompt();\n\n        // Dizin değişikliği izlemek için bir event listener ekleyin\n        window.addEventListener('popstate', updatePrompt);\n\n        // useEffect'in temizleme fonksiyonuyla event listener'ı kaldırın\n        return () => {\n            window.removeEventListener('popstate', updatePrompt);\n        }\n    }, []);\n    \n\n    return (\n        <>\n            <div className='terminal-container'>\n                <div className='terminal-output'>\n                    {listOfThreads.map(thread => {\n                        return (\n                            <ul key={thread.id}>\n                                <li>{`${prompt} ${thread.command}`}</li>\n                                <li>{thread.output}</li>\n                            </ul>\n                        )\n                    })}\n                </div>\n            </div>\n        </>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ;IACA,SAASW,YAAYA,CAAA,EAAG;MACpBC,KAAK,CAAC,aAAa,CAAC,CACfC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,SAAS,CAACM,IAAI,CAACP,MAAM,CAAC,CAAC,CACpCQ,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACV;;IAEA;IACAP,YAAY,CAAC,CAAC;;IAEd;IACAU,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAEX,YAAY,CAAC;;IAEjD;IACA,OAAO,MAAM;MACTU,MAAM,CAACE,mBAAmB,CAAC,UAAU,EAAEZ,YAAY,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIR,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACIrB,OAAA;MAAKsB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eAC/BrB,OAAA;QAAKsB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC3BjB,aAAa,CAACmB,GAAG,CAACC,MAAM,IAAI;UACzB,oBACIxB,OAAA;YAAAqB,QAAA,gBACIrB,OAAA;cAAAqB,QAAA,EAAM,GAAEf,MAAO,IAAGkB,MAAM,CAACC,OAAQ;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxC7B,OAAA;cAAAqB,QAAA,EAAKG,MAAM,CAACM;YAAM;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFnBL,MAAM,CAACO,EAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGd,CAAC;QAEb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAxB,EAAA,CA3CYF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}