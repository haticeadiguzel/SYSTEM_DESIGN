{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './terminal.css';\nimport redis from 'redis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst redisClient = redis.createClient({\n  host: '172.17.0.4',\n  // Redis sunucunuzun adresine göre güncelleyin\n  port: 6379,\n  db: 0\n});\nexport const Terminal = ({\n  listOfThreads\n}) => {\n  _s();\n  const [promptDirectory, setPromptDirectory] = useState({});\n  const [commandOutputs, setCommandOutputs] = useState({});\n  useEffect(() => {\n    fetch('/get_os').then(response => response.json()).then(data => {\n      setPromptDirectory(data.prompt_directory);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n\n    // Redis'ten verileri çek\n    listOfThreads.forEach(thread => {\n      redisClient.get(thread.command, (err, reply) => {\n        if (!err) {\n          setCommandOutputs(prevOutputs => ({\n            ...prevOutputs,\n            [thread.command]: reply\n          }));\n        }\n      });\n    });\n  }, [listOfThreads]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-output\",\n        children: listOfThreads.map(thread => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [promptDirectory, \" \", thread.command]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: commandOutputs[thread.command]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Terminal, \"OCqGQ2p66B7QKm56Grh1NSAZCb8=\");\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useEffect","useState","redis","jsxDEV","_jsxDEV","Fragment","_Fragment","redisClient","createClient","host","port","db","Terminal","listOfThreads","_s","promptDirectory","setPromptDirectory","commandOutputs","setCommandOutputs","fetch","then","response","json","data","prompt_directory","catch","error","console","forEach","thread","get","command","err","reply","prevOutputs","children","className","map","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './terminal.css';\nimport redis from 'redis';\n\nconst redisClient = redis.createClient({\n  host: '172.17.0.4', // Redis sunucunuzun adresine göre güncelleyin\n  port: 6379,\n  db: 0,\n});\n\nexport const Terminal = ({ listOfThreads }) => {\n  const [promptDirectory, setPromptDirectory] = useState({});\n  const [commandOutputs, setCommandOutputs] = useState({});\n\n  useEffect(() => {\n    fetch('/get_os')\n      .then((response) => response.json())\n      .then((data) => {\n        setPromptDirectory(data.prompt_directory);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    // Redis'ten verileri çek\n    listOfThreads.forEach((thread) => {\n      redisClient.get(thread.command, (err, reply) => {\n        if (!err) {\n          setCommandOutputs((prevOutputs) => ({\n            ...prevOutputs,\n            [thread.command]: reply,\n          }));\n        }\n      });\n    });\n  }, [listOfThreads]);\n\n  return (\n    <>\n      <div className=\"terminal-container\">\n        <div className=\"terminal-output\">\n          {listOfThreads.map((thread) => (\n            <ul key={thread.id}>\n              <li>\n                {promptDirectory} {thread.command}\n              </li>\n              <li>{commandOutputs[thread.command]}</li>\n            </ul>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGL,KAAK,CAACM,YAAY,CAAC;EACrCC,IAAI,EAAE,YAAY;EAAE;EACpBC,IAAI,EAAE,IAAI;EACVC,EAAE,EAAE;AACN,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExDD,SAAS,CAAC,MAAM;IACdmB,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,kBAAkB,CAACO,IAAI,CAACC,gBAAgB,CAAC;IAC3C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;;IAEJ;IACAb,aAAa,CAACe,OAAO,CAAEC,MAAM,IAAK;MAChCtB,WAAW,CAACuB,GAAG,CAACD,MAAM,CAACE,OAAO,EAAE,CAACC,GAAG,EAAEC,KAAK,KAAK;QAC9C,IAAI,CAACD,GAAG,EAAE;UACRd,iBAAiB,CAAEgB,WAAW,KAAM;YAClC,GAAGA,WAAW;YACd,CAACL,MAAM,CAACE,OAAO,GAAGE;UACpB,CAAC,CAAC,CAAC;QACL;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACpB,aAAa,CAAC,CAAC;EAEnB,oBACET,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACE/B,OAAA;MAAKgC,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eACjC/B,OAAA;QAAKgC,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC7BtB,aAAa,CAACwB,GAAG,CAAER,MAAM,iBACxBzB,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,GACGpB,eAAe,EAAC,GAAC,EAACc,MAAM,CAACE,OAAO;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACLrC,OAAA;YAAA+B,QAAA,EAAKlB,cAAc,CAACY,MAAM,CAACE,OAAO;UAAC;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJlCZ,MAAM,CAACa,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC3B,EAAA,CA3CWF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}