{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './terminal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Terminal = ({\n  listOfThreads\n}) => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n\n  // Güncel dizini (current directory) saklamak için yeni bir state değişkeni ekleyin\n  const [currentDirectory, setCurrentDirectory] = useState('');\n  useEffect(() => {\n    fetch('/get_prompt').then(response => response.json()).then(data => setPrompt(data.prompt)).catch(error => {\n      console.log(error);\n    });\n\n    // Güncel dizini almak ve state içinde saklamak için yeni bir route ekleyin\n    fetch('/get_current_directory').then(response => response.json()).then(data => setCurrentDirectory(data.currentDirectory)).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-output\",\n        children: listOfThreads.map(thread => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: `${currentDirectory}$ ${thread.command}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: thread.output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)]\n          }, thread.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Terminal, \"2H6WyrcZT7Hhba2rtEGpIBSkdO8=\");\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Terminal","listOfThreads","_s","prompt","setPrompt","currentDirectory","setCurrentDirectory","fetch","then","response","json","data","catch","error","console","log","children","className","map","thread","command","fileName","_jsxFileName","lineNumber","columnNumber","output","id","_c","$RefreshReg$"],"sources":["/home/hatice/Documents/BTK_PROJECTS/SYSTEM_PROJECT/frontend/src/Components/Terminal/terminal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './terminal.css';\n\nexport const Terminal = ({ listOfThreads }) => {\n    const [prompt, setPrompt] = useState('');\n\n    // Güncel dizini (current directory) saklamak için yeni bir state değişkeni ekleyin\n    const [currentDirectory, setCurrentDirectory] = useState('');\n\n    useEffect(() => {\n        fetch('/get_prompt')\n            .then(response => response.json())\n            .then(data => setPrompt(data.prompt))\n            .catch(error => {\n                console.log(error);\n            });\n\n        // Güncel dizini almak ve state içinde saklamak için yeni bir route ekleyin\n        fetch('/get_current_directory')\n            .then(response => response.json())\n            .then(data => setCurrentDirectory(data.currentDirectory))\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <>\n            <div className='terminal-container'>\n                <div className='terminal-output'>\n                    {listOfThreads.map(thread => {\n                        return (\n                            <ul key={thread.id}>\n                                {/* Güncellenmiş prompt ve güncel dizin değerlerini kullanın */}\n                                <li>{`${currentDirectory}$ ${thread.command}`}</li>\n                                <li>{thread.output}</li>\n                            </ul>\n                        )\n                    })}\n                </div>\n            </div>\n        </>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZa,KAAK,CAAC,aAAa,CAAC,CACfC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC,CAAC,CACpCS,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CAAC;;IAEN;IACAN,KAAK,CAAC,wBAAwB,CAAC,CAC1BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,mBAAmB,CAACK,IAAI,CAACN,gBAAgB,CAAC,CAAC,CACxDO,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACInB,OAAA;MAAKoB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eAC/BnB,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC3Bf,aAAa,CAACiB,GAAG,CAACC,MAAM,IAAI;UACzB,oBACItB,OAAA;YAAAmB,QAAA,gBAEInB,OAAA;cAAAmB,QAAA,EAAM,GAAEX,gBAAiB,KAAIc,MAAM,CAACC,OAAQ;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnD3B,OAAA;cAAAmB,QAAA,EAAKG,MAAM,CAACM;YAAM;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAHnBL,MAAM,CAACO,EAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAId,CAAC;QAEb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAtB,EAAA,CAxCYF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}