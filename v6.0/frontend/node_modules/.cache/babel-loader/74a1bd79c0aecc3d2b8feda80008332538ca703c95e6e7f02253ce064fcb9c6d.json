{"ast":null,"code":"var _jsxFileName = \"/home/hatice/Documents/GitHub/SYSTEM_DESIGN/v4.0/frontend/src/Pages/ThreadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Terminal } from \"../Components/Terminal/terminal\";\nimport { Form } from \"../Components/Form/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThreadPage = () => {\n  _s();\n  const [thread, setThread] = useState([]);\n  const [addThread, setAddThread] = useState(\"\");\n  // eslint-disable-next-line\n  const [promptDirectory, setPromptDirectory] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/thread\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setThread(data));\n  }, []);\n  const handleFormChange = inputValue => {\n    setAddThread(inputValue);\n  };\n  const handleFormSubmit = () => {\n    fetch(\"/thread/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        command: addThread\n      }),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(responseData => {\n      setAddThread(\"\");\n      getLatestThreads();\n      getLatestPromptDirectory();\n    });\n  };\n  const getLatestThreads = () => {\n    fetch(\"/thread\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setThread(data));\n  };\n  const getLatestPromptDirectory = () => {\n    fetch(\"/get_os\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setPromptDirectory(data.prompt_directory));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      userInput: addThread,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n      listOfThreads: thread\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreadPage, \"pHJGMYWGnwXqLsIium5h02UUrxY=\");\n_c = ThreadPage;\nvar _c;\n$RefreshReg$(_c, \"ThreadPage\");","map":{"version":3,"names":["React","useState","useEffect","Terminal","Form","jsxDEV","_jsxDEV","ThreadPage","_s","thread","setThread","addThread","setAddThread","promptDirectory","setPromptDirectory","fetch","then","response","ok","json","data","handleFormChange","inputValue","handleFormSubmit","method","body","JSON","stringify","command","headers","responseData","getLatestThreads","getLatestPromptDirectory","prompt_directory","children","userInput","onFormChange","onFormSubmit","fileName","_jsxFileName","lineNumber","columnNumber","listOfThreads","_c","$RefreshReg$"],"sources":["/home/hatice/Documents/GitHub/SYSTEM_DESIGN/v4.0/frontend/src/Pages/ThreadPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Terminal } from \"../Components/Terminal/terminal\";\nimport { Form } from \"../Components/Form/form\";\n\nexport const ThreadPage = () => {\n  const [thread, setThread] = useState([]);\n  const [addThread, setAddThread] = useState(\"\");\n  // eslint-disable-next-line\n  const [promptDirectory, setPromptDirectory] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/thread\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .then((data) => setThread(data));\n  }, []);\n\n  const handleFormChange = (inputValue) => {\n    setAddThread(inputValue);\n  };\n\n  const handleFormSubmit = () => {\n    fetch(\"/thread/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        command: addThread,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((responseData) => {\n        setAddThread(\"\");\n        getLatestThreads();\n        getLatestPromptDirectory();\n      });\n  };\n\n  const getLatestThreads = () => {\n    fetch(\"/thread\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .then((data) => setThread(data));\n  };\n\n  const getLatestPromptDirectory = () => {\n    fetch(\"/get_os\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .then((data) => setPromptDirectory(data.prompt_directory));\n  };\n\n  return (\n    <div>\n      <Form\n        userInput={addThread}\n        onFormChange={handleFormChange}\n        onFormSubmit={handleFormSubmit}\n      />\n      <Terminal listOfThreads={thread} />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}